{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Pytest Cookbook - recipes with videos and repos","text":""},{"location":"#purpose_of_this_book","title":"Purpose of this book","text":"<p>To provide a number of ready built and congfigurable FULL STACK PYTHON TEST FRAMEWORK, comprising of over 180 test templates and references for developers to adapt to their own needs.</p> <p>Links to resources I have found very helpful, as well as integration of these into the frameworks, are included.</p> <p>Installation will require just a 1-2-3 of:</p> <ol> <li>'python -m venv venv` to create virtual environment.</li> <li><code>pip install -r requirements.txt</code>.</li> <li><code>playwright install</code> to load Playwright browsers.</li> </ol> <p>We use a number of hooks for utilities and featues.</p> <p>One of these is customising the terminal report and one can configure the output in a number of ways, explained in articles and videos.</p> <p>Here is a sample output:</p>"},{"location":"#header_sections","title":"header sections","text":""},{"location":"#customised_words_for_passed_etc_as_well_as_adding_icons_and_format_word_colour","title":"customised words for passed etc as well as adding icons and format word colour","text":""},{"location":"#add_sections_to_end_of_pytest_output","title":"add sections to end of PyTest output","text":"<p>The frameworks have logging and other utilities installed to provide a complete framework.</p> <p>Resources included are:</p> <ol> <li>Links to helpful articles, videos and documentation. Converted and transcribed code of great YT videos where there is no code.</li> </ol>"},{"location":"#test_frameworks","title":"Test frameworks","text":"<p>See the README.md in root of each Test framework for detailed and up to date set up instructions.</p> <p>These two main test frameworks:</p> <ul> <li>PyTest_01_Full - a full stack testing framework from SQL Schemas to E2E testing with Playwright</li> <li>PyTest_02_DJANGO - is its own unique testing framework built from a range of sources. (Under construction and will be a Full-Stack test suite for Django).</li> </ul> <p>I strive to acknowledge sources I have used to learn PyTest and any adaptations of code samples used therein.</p> <p>As a curated list of resources, I have integrity over linking to the work of others and due credits are given.</p> <p>Often I am a wrapper around someone else's effort and I try to add a different presentation whre possible as we each find our understanding with a different presentation of the subject. Hence having may teachers enables us all as eternal students to get our heads around sometimes very complex subjects.</p>"},{"location":"#about_me","title":"About me","text":"<p>I am a Python Test Engineer using PyTest and Playwright as well as a Software Tester.</p> <p>I enjoy building Plugins and I hae created a PyTest Hooks and Plugin online video course that teaches how to create lite versions of some well known plugins as well as our own useful custom plugins which can be made distributabe:</p> <p>Example plugins are:</p> <ul> <li>CSV Lite Reporter</li> <li>Export results to DB</li> <li>Sorting, randomizing and deselecting tests</li> <li>Customising the console report</li> </ul> <p>The course is available Udemy Hooks and Plugins course and Udemy has a sale ever two weeks and the cost would be $20 USD approx.</p> <p></p> <p>There is more information about me and my services here.</p>"},{"location":"#how_best_to_use_this_book","title":"How best to use this book","text":"<p>For PyTest-Full-Stack framework:</p> <p>Download or git clone from repo.</p> <p>For prettier general console output, Rich and PyBoxen, built on Rich, are used.</p> <p>PyTest-sugar, an excellent plugin, was used but with the inclusion of the pytest_terminal_summary hook in the conftest.py file of PyTest-Full-Stack, we have rich console output that is configurable and customisable.</p>"},{"location":"#youtube_videos","title":"YouTube Videos","text":"<p>I have made some videos to assist in using this book.</p> <p>These are available here.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"craig/","title":"Index","text":""},{"location":"craig/#craig_west_-_python_test_engineer","title":"Craig West - Python Test Engineer","text":"<ul> <li>Degree in Chemistry, Oxford University.</li> <li>Former A+ PC Technician, Microsoft Certified Systems Engineer and Microsoft Certified SQL Server DBA.</li> <li>Former Business Information Architect.</li> <li>Qualified Accountant Technician and business owner.</li> <li>Experience with REST APIs, GraphQL, React, Vue, Web Components, Node, Docker</li> <li>Talks and workshops given at WordCamps, MeetUps and NDC.</li> </ul>"},{"location":"craig/#connect_with_me","title":"Connect with me","text":"<ul> <li>\ud83c\udf10 https://python-test-engineer.netlify.app/</li> <li>\ud83d\udceb mrcraigwest@hotmail.com</li> <li>\ud83d\udda5\ufe0f https://www.youtube.com/@iwswordpress/featured</li> </ul>"},{"location":"craig/#python_test_framework","title":"Python Test Framework","text":"<p>I am developing a collated resource for Python Testing along with a range of test Suites with 'one click' set up. https://github.com/iwswordpress/generic-pytest-playwright-pytest-bdd-framework</p>"},{"location":"craig/#talks_and_workshops","title":"Talks and Workshops","text":"<p>A list of talks and workshops I have given:</p> <ul> <li> <p>TALK: Offline and instant websites, aka Progressive Web Apps - AsyncJS, Brighton, September 2021.</p> </li> <li> <p>LIGHTNING TALK: WordPress as a Micro Service to any framework - WordFest, July 2021.</p> </li> <li> <p>TALK: WP REST API and Web Components =&gt; 100% Internet - WordCamp Santa Clarita, July 2021.</p> </li> <li> <p>TALK: Web Components in WP, Gutenberg and as HTML plugins. - WordCamp North East Ohio May 2021.</p> </li> <li> <p>TALK: Leveraging the power or the WordPress REST API - WP Leeds April 2021.</p> </li> <li> <p>WORKSHOP: WP REST API and you -&gt; Best Friends Forever workshop (90 mins) - WordCamp Greece April 2021.</p> </li> <li> <p>TALK: Web Components as Micro Apps - NDC London, Jan 2021</p> </li> <li> <p>TALK: Unifying frameworks with Web Components - Brighton AsyncJS, Nov 2020.</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshop with NDC.</p> </li> <li> <p>WORKSHOP: Web Components Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshope with NDC.</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - Brighton WordUp June 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Denver, June 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Kent, Ohio May 2020.</p> </li> <li> <p>TALK: What is the WP REST API and how can I use it to make forms and pages that don\u2019t need to do be reloaded? - WordUp Brighton May 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API and AJAX Forms - WordCamp Geneva March 2020 EVENT CANCELLED due to virus concerns.</p> </li> <li> <p>TALK - WP-HTML: The marriage of WP and JS Frameworks for expansion, ubiquity and profit - WordCamp Vienna February 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API - WordCamp Vienna February 2020.</p> </li> <li> <p>TALK: Progressive Web Apps - Brighton WordUp November 2019.</p> </li> <li> <p>TALK: Decoupled WordPress (code along style) - WordCamp Dublin October 2019.</p> </li> <li> <p>TALK: JWT and Authentication - WPHooked London September 2019</p> </li> <li> <p>TALK: Decoupled WordPress and WP Components - WordCamp Brighton August 2019.</p> </li> </ul>"},{"location":"craig/#published_udemy_courses","title":"Published Udemy Courses","text":"<p>Udemy is a great learning platform and having sales at least once a month, courses can be purchased for ~ \u00a315/$15 USD.</p> <p>These have now been retired.</p> <ul> <li>WordPress REST API and AJAX Forms/Pages - DEMO (paid)</li> <li>Progressive Web Apps - DEMO (paid).</li> <li>WP-HTML: decoupling WordPress to any HTML platform using Web Components and the WP REST API. This also enables HTML plugins for non-WP Sites - DEMO (free).</li> <li>Stylish Dynamic Web Forms with jQuery validation - DEMO (free).</li> </ul>"},{"location":"craig/#youtube_courses_-_developer_to_developer_courses","title":"YouTube Courses - Developer to Developer courses","text":"<p>These are video courses that cover work through official documents to help other developers, learn in public and show prosepective employers not just what I know but how I learn and how I communicate technical matters to others.</p> <p>There are also some specific videos explaining solutions to set ups other developers may encounter.</p> <ul> <li> <p>HIGHLY-FUNCTIONAL-WEBCOMPONENTS: A video course based on the workshop I gave at NDC Oslo June 2020 - DEMO.</p> </li> <li> <p>WP Plugin Boilerplate:  I havea video series to explain WP Plugin Boilerplate using a scaffolded out project that demonstrates the use of MySQL, wp_nonce, REST API, forms and how to redirect pages to plugin templates to make the plugin theme independent - DEMO.</p> </li> <li>WP Plugin Boilerplate:  I havea video series to explain WP Plugin Boilerplate using a scaffolded out project that demonstrates the use of MySQL, wp_nonce, REST API, forms and how to redirect pages to plugin templates to make the plugin theme independent - DEMO.</li> </ul>"},{"location":"craig/#volounteering","title":"Volounteering","text":"<p>I volounteer at Codebar.io in Brighton.</p>"},{"location":"craig/#outside_interests","title":"Outside interests","text":"<p>These include Community Kitchens, gym, occasional partner dancing and DIY.</p>"},{"location":"craig/contact/","title":"Contact me","text":""},{"location":"craig/contact/#email","title":"Email","text":"<p>You can contact me at this email: iwswordpress@gmail.com</p>"},{"location":"craig/courses/","title":"Online courses","text":""},{"location":"craig/courses/#udemycom","title":"Udemy.com","text":"<p>The course Udemy Hooks and Plugins course has just been published and Udemy has a sale ever two weeks and the cost would be $20 USD approx.</p> <p></p>"},{"location":"craig/craig/","title":"Craig","text":"<ul> <li> <p>PythonTestEngineer.co.uk</p> </li> <li> <p>Github CV</p> </li> <li> <p>Github Repo</p> </li> </ul> <p></p> Python Test Engineer - particulalry Django"},{"location":"craig/craig/#python_test_engineer","title":"Python Test Engineer","text":"<ul> <li>Degree in Chemistry, Oxford University.</li> <li>Former A+ PC Technician, Microsoft Certified Systems Engineer and Microsoft Certified SQL Server DBA.</li> <li>Former Business Information Architect.</li> <li>Qualified Accountant Technician and business owner.</li> <li>Experience with REST APIs, GraphQL, React, Vue, Web Components, Node, Docker</li> <li>Talks and workshops given at WordCamps, MeetUps and NDC.</li> </ul>"},{"location":"craig/craig/#talks_and_workshops","title":"Talks and Workshops","text":"<p>A list of talks and workshops I have given: </p> <ul> <li> <p>TALK: Offline and instant websites, aka Progressive Web Apps - AsyncJS, Brighton, September 2021.</p> </li> <li> <p>LIGHTNING TALK: WordPress as a Micro Service to any framework - WordFest, July 2021.</p> </li> <li> <p>TALK: WP REST API and Web Components =&gt; 100% Internet - WordCamp Santa Clarita, July 2021.</p> </li> <li> <p>TALK: Web Components in WP, Gutenberg and as HTML plugins. - WordCamp North East Ohio May 2021.</p> </li> <li> <p>TALK: Leveraging the power or the WordPress REST API - WP Leeds April 2021</p> </li> <li> <p>WORKSHOP: WP REST API and you -&gt; Best Friends Forever workshop (90 mins) - WordCamp Greece April 2021 </p> </li> <li> <p>TALK: Web Components as Micro Apps - NDC London, Jan 2021</p> </li> <li> <p>TALK: Unifying frameworks with Web Components - Brighton AsyncJS, Nov 2020</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshop with NDC</p> </li> <li> <p>WORKSHOP: Web Components Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshope with NDC</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - Brighton WordUp June 2020</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Denver, June 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Kent, Ohio May 2020.</p> </li> <li> <p>TALK: What is the WP REST API and how can I use it to make forms and pages that don\u2019t need to do be reloaded? - WordUp Brighton May 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API and AJAX Forms - WordCamp Geneva March 2020 EVENT CANCELLED due to virus concerns </p> </li> <li> <p>TALK - WP-HTML: The marriage of WP and JS Frameworks for expansion, ubiquity and profit - WordCamp Vienna February 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API - WordCamp Vienna February 2020.</p> </li> <li> <p>TALK: Progressive Web Apps - Brighton WordUp November 2019.</p> </li> <li> <p>TALK: Decoupled WordPress (code along style) - WordCamp Dublin October 2019.</p> </li> <li> <p>TALK: JWT and Authentication - WPHooked London September 2019</p> </li> <li> <p>TALK: Decoupled WordPress and WP Components - WordCamp Brighton August 2019.</p> </li> </ul>"},{"location":"craig/craig/#published_udemy_courses","title":"Published Udemy Courses","text":"<p>Udemy is a great learning platform and having sales at least once a month, courses can be purchased for ~ \u00a315/$15 USD.</p> <p>These have now been retired.</p> <ul> <li>WordPress REST API and AJAX Forms/Pages - DEMO https://www.youtube.com/watch?v=eubhbcGH_Ws&amp;t=6s (paid)</li> <li>Progressive Web Apps - DEMO https://www.youtube.com/watch?v=k_lHvNL0gkw (paid)</li> <li>WP-HTML: decoupling WordPress to any HTML platform using Web Components and the WP REST API. This also enables HTML plugins for non-WP Sites - https://www.udemy.com/course/powerful-html-pages-using-wordpress-component-architecture/ (free)</li> <li>Stylish Dynamic Web Forms with jQuery validation - https://www.udemy.com/course/ready-to-use-form-validation-templates-with-jquery/ (free)</li> </ul>"},{"location":"craig/craig/#youtube_courses_-_developer_to_developer_courses","title":"YouTube Courses - Developer to Developer courses","text":"<p>These are video courses that cover work through official documents to help other developers, learn in public and show prosepective employers not just what I know but how I learn and how I communicate technical matters to others.</p> <p>There are also some specific videos explaining solutions to set ups other developers may encounter.</p> <ul> <li> <p>HIGHLY-FUNCTIONAL-WEBCOMPONENTS: A video course based on the workshop I gave at NDC Oslo June 2020 - https://www.youtube.com/watch?v=QC-JTqQTv2k&amp;list=PLsszRSbzjyvkQwzrJobroRl7z7MfSlePa </p> </li> <li> <p>WP Plugin Boilerplate:  I havea video series to explain WP Plugin Boilerplate using a scaffolded out project that demonstrates the use of MySQL, wp_nonce, REST API, forms and how to redirect pages to plugin templates to make the plugin theme independent. https://www.youtube.com/watch?v=lJ9ktD4JOfs&amp;list=PLsszRSbzjyvn-RQr4dEjrgnTne2HcJKee</p> </li> </ul>"},{"location":"craig/craig/#volounteering","title":"Volounteering","text":"<p>I volounteer at Codebar.io in Brighton as well as some Community Kitchens.</p>"},{"location":"craig/craig/#outside_interests","title":"Outside interests","text":"<p>These include Community Kitchens, gym, occasional partner dancing and DIY.</p>"},{"location":"craig/cv/","title":"CV","text":"<ul> <li> <p>PythonTestEngineer.co.uk</p> </li> <li> <p>Github CV</p> </li> <li> <p>Github Repo</p> </li> </ul> <p></p> Python Test Engineer - particulalry Django"},{"location":"craig/cv/#python_test_engineer","title":"Python Test Engineer","text":"<ul> <li>Degree in Chemistry, Oxford University.</li> <li>Former A+ PC Technician, Microsoft Certified Systems Engineer and Microsoft Certified SQL Server DBA.</li> <li>Former Business Information Architect.</li> <li>Qualified Accountant Technician and business owner.</li> <li>Experience with REST APIs, GraphQL, React, Vue, Web Components, Node, Docker</li> <li>Talks and workshops given at WordCamps, MeetUps and NDC.</li> </ul>"},{"location":"craig/cv/#talks_and_workshops","title":"Talks and Workshops","text":"<p>A list of talks and workshops I have given: </p> <ul> <li> <p>TALK: Offline and instant websites, aka Progressive Web Apps - AsyncJS, Brighton, September 2021.</p> </li> <li> <p>LIGHTNING TALK: WordPress as a Micro Service to any framework - WordFest, July 2021.</p> </li> <li> <p>TALK: WP REST API and Web Components =&gt; 100% Internet - WordCamp Santa Clarita, July 2021.</p> </li> <li> <p>TALK: Web Components in WP, Gutenberg and as HTML plugins. - WordCamp North East Ohio May 2021.</p> </li> <li> <p>TALK: Leveraging the power or the WordPress REST API - WP Leeds April 2021</p> </li> <li> <p>WORKSHOP: WP REST API and you -&gt; Best Friends Forever workshop (90 mins) - WordCamp Greece April 2021 </p> </li> <li> <p>TALK: Web Components as Micro Apps - NDC London, Jan 2021</p> </li> <li> <p>TALK: Unifying frameworks with Web Components - Brighton AsyncJS, Nov 2020</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshop with NDC</p> </li> <li> <p>WORKSHOP: Web Components Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshope with NDC</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - Brighton WordUp June 2020</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Denver, June 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Kent, Ohio May 2020.</p> </li> <li> <p>TALK: What is the WP REST API and how can I use it to make forms and pages that don\u2019t need to do be reloaded? - WordUp Brighton May 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API and AJAX Forms - WordCamp Geneva March 2020 EVENT CANCELLED due to virus concerns </p> </li> <li> <p>TALK - WP-HTML: The marriage of WP and JS Frameworks for expansion, ubiquity and profit - WordCamp Vienna February 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API - WordCamp Vienna February 2020.</p> </li> <li> <p>TALK: Progressive Web Apps - Brighton WordUp November 2019.</p> </li> <li> <p>TALK: Decoupled WordPress (code along style) - WordCamp Dublin October 2019.</p> </li> <li> <p>TALK: JWT and Authentication - WPHooked London September 2019</p> </li> <li> <p>TALK: Decoupled WordPress and WP Components - WordCamp Brighton August 2019.</p> </li> </ul>"},{"location":"craig/cv/#published_udemy_courses","title":"Published Udemy Courses","text":"<p>Udemy is a great learning platform and having sales at least once a month, courses can be purchased for ~ \u00a315/$15 USD.</p> <p>These have now been retired.</p> <ul> <li>WordPress REST API and AJAX Forms/Pages - DEMO https://www.youtube.com/watch?v=eubhbcGH_Ws&amp;t=6s (paid)</li> <li>Progressive Web Apps - DEMO https://www.youtube.com/watch?v=k_lHvNL0gkw (paid)</li> <li>WP-HTML: decoupling WordPress to any HTML platform using Web Components and the WP REST API. This also enables HTML plugins for non-WP Sites - https://www.udemy.com/course/powerful-html-pages-using-wordpress-component-architecture/ (free)</li> <li>Stylish Dynamic Web Forms with jQuery validation - https://www.udemy.com/course/ready-to-use-form-validation-templates-with-jquery/ (free)</li> </ul>"},{"location":"craig/cv/#youtube_courses_-_developer_to_developer_courses","title":"YouTube Courses - Developer to Developer courses","text":"<p>These are video courses that cover work through official documents to help other developers, learn in public and show prosepective employers not just what I know but how I learn and how I communicate technical matters to others.</p> <p>There are also some specific videos explaining solutions to set ups other developers may encounter.</p> <ul> <li> <p>HIGHLY-FUNCTIONAL-WEBCOMPONENTS: A video course based on the workshop I gave at NDC Oslo June 2020 - https://www.youtube.com/watch?v=QC-JTqQTv2k&amp;list=PLsszRSbzjyvkQwzrJobroRl7z7MfSlePa </p> </li> <li> <p>WP Plugin Boilerplate:  I havea video series to explain WP Plugin Boilerplate using a scaffolded out project that demonstrates the use of MySQL, wp_nonce, REST API, forms and how to redirect pages to plugin templates to make the plugin theme independent. https://www.youtube.com/watch?v=lJ9ktD4JOfs&amp;list=PLsszRSbzjyvn-RQr4dEjrgnTne2HcJKee</p> </li> </ul>"},{"location":"craig/cv/#volounteering","title":"Volounteering","text":"<p>I volounteer at Codebar.io in Brighton as well as some Community Kitchens.</p>"},{"location":"craig/cv/#outside_interests","title":"Outside interests","text":"<p>These include Community Kitchens, gym, occasional partner dancing and DIY.</p>"},{"location":"craig/services/","title":"Services provided","text":""},{"location":"craig/services/#services","title":"Services","text":""},{"location":"craig/services/#testing","title":"Testing","text":""},{"location":"craig/services/#django","title":"Django","text":""},{"location":"craig/services/#engagement_style","title":"Engagement Style","text":""},{"location":"craig/services/#hybrid","title":"Hybrid","text":""},{"location":"django_testing/","title":"Django tesing","text":"<p>REPO</p>"},{"location":"django_testing/apps/","title":"Apps","text":"<p>A compilation of various soruces in one project.</p>"},{"location":"django_testing/apps/#accountsposts","title":"accounts/posts","text":"<p>Based on a TDD video series of Django by Ssali Jonathan, I have extended it to include a PyTest folder as well as additional Django Unit Tests.</p> <p>Based on an ORM Deep Dive series by BugBytes, the code for the 18+ videos was not included in the repo so I have added files for each of the videos. I have also included some of my own ORM scripts as well as others from  Very Academy.</p> <p>It uses django-extensions, django-extensions, which offers the ability to run <code>manage.py runscript &lt;file_name_but_not_py_extension&gt;</code>, as if in a shell.</p> <p>Custom Commands to load data, SQL queries, transactions are also included and I have extended the code to include other useful utilities, as well as some relevant tests.</p> <p>I have added dditional tests from the Django Docs are also included.</p>"},{"location":"django_testing/apps/#ecommerce","title":"ecommerce","text":"<p>Tom Dekan tests - blog and video link https://www.photondesigner.com/articles/unit-tests-factory-boy-faker?ref=yt-unit-tests-factory-boy-faker</p>"},{"location":"django_testing/apps/#filemanager","title":"filemanager","text":"<p>A small app concerned with file uploading and management, this offers some more examples of testing with UnitTest and PyTest.</p>"},{"location":"django_testing/index_django/","title":"Django","text":""},{"location":"django_testing/index_django/#about","title":"About","text":"<p>This has a large selection of tests, many linked to video series.</p>"},{"location":"django_testing/index_django/#todo","title":"TODO","text":"<p>https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django</p> <p>https://github.com/elena/example-tests-django-hypothesis</p> <p>pytest-django</p> <p>bugbytes - middleware and pytest-django:  - https://www.youtube.com/watch?v=TTEEr4N-lKw  - https://www.youtube.com/watch?v=pdatgYDXmSE</p>"},{"location":"django_testing/setup/","title":"Setup","text":""},{"location":"django_testing/setup/#instructions","title":"Instructions","text":"<ul> <li> <p>cd REPO.</p> </li> <li> <p>creater virtual env <code>python -m venv venv</code>.</p> </li> <li>pip install -r requirents.txt</li> <li>run <code>playwright install</code> to load in playwright browsers.</li> <li>in one terminal run <code>python manage.py runserver</code>.</li> <li>For unittests run <code>python manage.py test</code></li> <li>in another run <code>python -m pytest -v</code> or <code>python -m pytest -v --headed</code> if using  playwright and you want to see browsers. Sometimes this may not work so you will need to add the headless=False to the test.</li> <li>DB has had migrations. superuser: admin password</li> <li>super user is <code>admin</code> and <code>password</code>.</li> <li>pytest-sugar added for fancier terminal output</li> <li>Rich and PyBoxen used for fancy console output. Examples are in the orm app.</li> <li>django-extensions used in orm app so that we can run scripts in a py file rather than in shell. See <code>orm/_NOTES.md</code> for more details - TODO</li> </ul>"},{"location":"django_testing/setup/#alternative","title":"Alternative","text":"<p>If one is not using requirements.txt one would need to install:</p> <ul> <li>django</li> <li>django-extensions for the utuilities used in orm.</li> <li>pytest, pytest-django, pytest-cov.</li> <li>playwright for browser based testing (an then run <code>playrwight install</code> to load browsers).</li> <li>pytest-sugar for nicer output format of tests.</li> <li>pyboxen for fancy console output used in orm.</li> <li>requests for order app.</li> </ul>"},{"location":"django_testing/setup/#references","title":"References","text":"<ul> <li> <p>Pybites - https://www.youtube.com/watch?v=L5jWFU2sVXQ for help with setting up PyTest tests for Django. </p> </li> <li> <p>Ssali Jonathan - https://www.youtube.com/watch?v=Nn3Yjea5KCI&amp;list=PLEt8Tae2spYlVZUBBEE9PtX-NXk_hw7o4 for the TDD approach to building the <code>posts</code> app. This gives a basis for many good tests. I have transported a few for demonstation purposes in <code>pytest_tests</code>. (PyTest searches for all test files with test_ or whatever is specified in the pytest.ini file in root).</p> </li> </ul>"},{"location":"django_testing/setup/#todos","title":"Todos","text":"<p>These will use their own individual app to showcase them.</p> <ul> <li> <p>DjangoStars - https://djangostars.com/blog/django-pytest-testing/</p> </li> <li> <p>https://pytest-with-eric.com/pytest-advanced/pytest-django-restapi-testing/#Conftest-and-Setup</p> </li> <li> <p>https://dev.to/sherlockcodes/pytest-with-django-rest-framework-from-zero-to-hero-8c4</p> </li> </ul>"},{"location":"django_testing/tests/","title":"Tests","text":"<p>These are located within each app under the tests folder. The standard <code>test.py</code> is best deleted otherwise the test runner can get confused and tests won't run.</p> <p>Running <code>python manage.py test</code> will run all the tests. <code>python -m pytest</code> will also run these tests plus any other tests in root tests folder. For clarification, I have called this folder <code>pytest-tests</code>. PyTest searches the whole project for test files.</p>"},{"location":"pytest/","title":"PyTest Full Stack","text":""},{"location":"pytest/#full_stack","title":"Full Stack","text":"<p>This framework has tests covering:</p> <ul> <li>SQL Schemas for foreign keys, number of tables, check constraints etc...</li> <li>Unit tests</li> <li>Mocks, patches and monkey patches</li> <li>Behavior Driven Testing templates</li> <li>API testing</li> <li>End to End testing with Playwright</li> </ul>"},{"location":"pytest/#youtube_videos","title":"YouTube videos","text":"<p>Videos are available here: YouTube </p>"},{"location":"pytest/#repo","title":"Repo","text":"<p>The PyTest Full Stack repo is available here: PyTest Full Stack</p>"},{"location":"pytest/#installation","title":"Installation","text":"<ul> <li>In your IDE open up the PyTest_01_FULL folder.</li> <li>Create a virtual environment <code>python -m venv venv</code>.</li> <li>Activate your virtual enviromnent: Windows <code>.\\venv\\Scripts\\activte</code> or Mac <code>source venv\\bin\\activate</code>.</li> <li>install requirements <code>pip install -r requirements.txt</code>.</li> <li>for Playwright browsers run <code>playwright install</code>.</li> <li>run all tests <code>python -m pytest -vs</code>.</li> <li>There are around 200 templated tests.</li> <li>The video series goes into features and utils -&gt; YouTube</li> </ul>"},{"location":"pytest/pytest_full_stack_customise/","title":"How to configure your own custom PyTest Full Stack","text":""},{"location":"pytest/pytest_full_stack_customise/#please_see_the_videos_in_the_playlist","title":"Please see the videos in the playlist","text":"<p>YouTube playlist: here</p> <p>This covers:</p> <ul> <li>pytest.ini settings for logging.</li> <li>how to read values from the config.ini files in the config folder.</li> <li>customise the report header in the console output.</li> <li>customising the test status words, colours and icons in the console output.</li> <li>adding a report section at end of console output.</li> <li>and more...</li> </ul>"},{"location":"pytest/pytest_test_management/","title":"Test Management","text":""},{"location":"pytest/pytest_test_management/#using_the_test_name_as_meta_data","title":"Using the test name as meta data","text":"<p>If we name our tests with the following structure:</p> <p>test_0001_api_description</p> <p>We can programatically use the pytest_collection_modifyitems(items), where items is a list of tests, to extract out the following information:</p> <ul> <li>test id (0001).</li> <li>type of test, (api), which could be any 3 character code like dbm for database model, int for integrations, unt for unit etc</li> <li>we also get access to the nodeid and markers for each test with this hook.</li> </ul> <p>This can be loaded into a database and then combined with the output CSVs that have:</p> <ul> <li>test id</li> <li>test name</li> <li>any markers</li> <li>test node id which gives folder, parent folders up to tests folder</li> <li>test result</li> <li>test duration</li> </ul> <p>Docstrings can also be extracted and added to the database.</p>"},{"location":"pytest/pytest_test_management/#report_name_as_test_run_information","title":"Report name as test run information","text":"<p>Furthermore, as output test CSV files have the format of <code>report_2024-06-02-13-39-00_9496487.csv</code>, we can split the filename on '_'. giving us the date and time of the test  from the second item. This should be globally unique as it gives the time to the second, but to ensure global uniqueness, a randon intger between, 1_000_000 and 9_999_999 is added.</p> <p>This enable these data tables to be joined to create detailed test reporting. A sprint version number can also be added to create a history of tests by sprint.</p> <p>Extending the database with test creators, creation date, test modifier and modification date, we can create audit trails of tests.</p>"},{"location":"pytest/pytest_tests/","title":"Tests","text":""},{"location":"pytest/pytest_tests/#00_check_setup","title":"00_check_setup","text":"<p>These are used to test that:</p> <ul> <li>src and tests are wired correctly</li> <li>read config.ini in the config folder</li> <li>logging works and outputs to log/pytesting.log</li> <li>test a sample mock works</li> </ul>"},{"location":"pytest/pytest_tests/#01_inspect","title":"01_inspect","text":"<p>Using SQLModel's inspect, we run tests on SQL schema to verify foreign keys, check constraints etc exist. Inspired by Very Academy's TDD Fast Api course.</p>"},{"location":"pytest/pytest_tests/#02_py_coffee","title":"02_py_coffee","text":"<p>This is a great video series on PyTest. I have included the tests form his repo as part of the template tests. Links in repo.</p> <p>https://www.youtube.com/playlist?list=PLxNPSjHT5qvuZ_JT1bknzrS8YqLiMjNpS</p>"},{"location":"pytest/pytest_tests/#03_indian_pythonista","title":"03_indian_pythonista","text":"<p>Another great video series that has source code included.</p> <p>https://www.youtube.com/playlist?list=PLyb_C2HpOQSBWGekd7PfhHnb9GnqDgrxS</p>"},{"location":"pytest/pytest_tests/#05_mocks_patch","title":"05_mocks_patch","text":"<p>A large number of templated mocks and patches, with extensive code comments. I have adapted them as necessary and the links to the YouTube videos are included.</p> <p>Some did not have source code so I transcribed the code from the videos.</p>"},{"location":"pytest/pytest_tests/#10_py_api_pets","title":"10_py_api_pets","text":"<p>Using Playwright, the full CRUD api tests to https://petstore.swagger.io/v2/pet/ is included providing templates for API testing.</p>"},{"location":"pytest/pytest_tests/#20_playwright","title":"20_playwright","text":"<p>A great range of End2End tests from a variety of sources.</p>"},{"location":"pytest/pytest_tests/#50_pwe_bdd","title":"50_pwe_bdd","text":"<p>A working example of using the pyTest-bdd, based on the awesome resource https://pytest-with-eric.com/ which is perhaps the best resource on PyTest available.</p> <p>In time, more templates will be added, hevily commented to aid understanding and with videos as and when possible.</p>"}]}